<?xml version="1.0"?>
<doc>
    <assembly>
        <name>QuizyfyAPI</name>
    </assembly>
    <members>
        <member name="M:QuizyfyAPI.Controllers.ChoicesController.Get(System.Int32,System.Int32)">
            <summary>
            Get list of all choices for given quiz id and question id.
            </summary>
            <param name="quizId">Parameter which tells us to which quiz question belongs to.</param>
            <param name="questionId">Id of question we want to get choices from.</param>
            <returns>An ActionResult of ChoiceModel array type</returns>
            <remarks>
            Sample request (this request returns **array of choices**)  
                 
                GET /quizzes/1/questions/1/choices
                
            </remarks>
            <response code="200">Returns array of all choices</response>
            <response code="204">No questions exists so return nothing.</response>
            <response code="404">Quiz or question doesn't exist.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.ChoicesController.Get(System.Int32,System.Int32,System.Int32)">
            <summary>
            Get one choice for given quiz and question id.
            </summary>
            <param name="quizId">Parameter which tells us to which quiz question belongs to.</param>
            <param name="questionId">Id of question we want to get choice from.</param>
            <param name="choiceId">Id of choice we want to return.</param>
            <returns>An ActionResult of ChoiceModel type</returns>
            <remarks>
            Sample request (this request returns **one choice**)  
                 
                GET /quizzes/1/questions/1/choices/1
                
            </remarks>
            <response code="200">Returns one choice</response>
            <response code="204">No questions exists so return nothing.</response>
            <response code="404">Choice doesn't exist.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.ChoicesController.Post(System.Int32,System.Int32,QuizyfyAPI.Models.ChoiceModel)">
            <summary>
            Creates choice for given quiz and question with provided data.
            </summary>
            <param name="quizId">Id of quiz you want to get question from.</param>
            <param name="questionId">Id of question we want to attach choice to.</param>
            <param name="model">Choice model.</param>
            <returns>>An ActionResult of Choice</returns>
            <remarks>
            Sample request (this request returns **created choice**)  
                 
                POST /quizzes/1/questions/1/choices/
                
                {
                    "name":"another name"
                }
                
            </remarks>  
            <response code="201">Returns created choice.</response>
            <response code="422">One of validation errors occured.</response>
            <response code="400">Bad request not complete or corrupted data.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.ChoicesController.Put(System.Int32,System.Int32,System.Int32,QuizyfyAPI.Models.ChoiceModel)">
            <summary>
            Updates choice for given quiz and question with specified id and data.
            </summary>
            <param name="quizId">Id of quiz you want to update.</param>
            <param name="questionId">Id of question you want to update.</param>
            <param name="choiceId">Id of choice you want to update.</param>
            <param name="model">New data for question.</param>
            <returns>>An ActionResult of QuestionModel</returns>
            <remarks>
            Sample request (this request returns **updated choice**)  
                 
                PUT /quizzes/1/questions/1/choices/1
                
                {
                    "name":"another name"
                }
                
            </remarks>  
            <response code="200">Returns choice with provided id and updated info.</response>
            <response code="404">Choice with provided id wasn't found.</response> 
            <response code="204">Probably should never return that but there is possibility that question isn't null but mapping result in null.</response> 
            <response code="422">One of validation errors occured.</response>
            <response code="400">Bad request not complete or corrupted data.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.ChoicesController.Delete(System.Int32,System.Int32,System.Int32)">
            <summary>
            Deletes question for quiz and question with specified id.
            </summary>
            <param name="quizId">Id of quiz you want to delete question from.</param>
            <param name="questionId">Id of question you want to delete choice from.</param>
            <param name="choiceId">Id of choice you want to delete.</param>
            <returns>Response Code</returns>
            <remarks>
            Sample request (this request returns **response code only**)  
                 
                DELETE /quizzes/1/questions/1/choices/1
                
            </remarks> 
            <response code = "404" >Quiz or question or choice with provided id wasn't found.</response> 
            <response code = "200" >Choice was sucessfully deleted.</response> 
            <response code = "400" >Request data was not complete or corrupted.</response> 
        </member>
        <member name="M:QuizyfyAPI.Controllers.LikesController.Put(System.Int32)">
            <summary>
            Updates question for given quiz with specified id and data.
            </summary>
            <param name="quizId">Id of quiz you want to update.</param>
            <param name="questionId">Id of question you want to update.</param>
            <param name="model">New data for question.</param>
            <returns>>An ActionResult of QuestionModel</returns>
            <remarks>
            Sample request (this request returns **updated question**)  
                 
                PUT /quizzes/1/questions/1
                
                {
                    "name":"another name"
                }
                
            </remarks>  
            <response code="200">Returns question with provided id and updated info.</response>
            <response code="404">Question with provided id wasn't found.</response> 
            <response code="204">Probably should never return that but there is possibility that question isn't null but mapping result in null.</response> 
            <response code="422">One of validation errors occured.</response>
            <response code="400">Bad request not complete or corrupted data.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.LikesController.Delete(System.Int32)">
            <summary>
            Deletes quiz with specified id.
            </summary>
            <param name="id">Id of quiz you want to delete.</param>
            <returns>Response Code</returns>
            <remarks>
            Sample request (this request returns **response code only**)  
                 
                DELETE /quizzes/1
                
            </remarks> 
            <response code = "404" >Quiz with provided id wasn't found.</response> 
            <response code = "200" >Quiz was sucessfully deleted.</response> 
            <response code = "400" >Request data was not complete or corrupted.</response> 
        </member>
        <member name="M:QuizyfyAPI.Controllers.QuestionsController.Get(System.Int32,System.Boolean)">
            <summary>
            Get list of all questions for given quiz id.
            </summary>
            <param name="quizId">Parameter which tells us to which quiz question belongs to.</param>
            <param name="includeChoices">Parameter which tells us wheter to include choices for question or not.</param>
            <returns>An ActionResult of QuestionModel array type</returns>
            <remarks>
            Sample request (this request returns **array of questions**)  
                 
                GET /quizzes/1/questions/
                
            </remarks>
            <response code="200">Returns array of all questions</response>
            <response code="204">No questions exists so return nothing.</response>
            <response code="404">Quiz doesn't exist.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.QuestionsController.Get(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get one question for given quiz id.
            </summary>
            <param name="quizId">Parameter which tells us to which quiz question belongs to.</param>
            <param name="questionId">Id of question we want to return.</param>
            <param name="includeChoices">Parameter which tells us wheter to include choices for question or not.</param>
            <returns>An ActionResult of QuestionModel array type</returns>
            <remarks>
            Sample request (this request returns **one question**)  
                 
                GET /quizzes/1/questions/1
                
            </remarks>
            <response code="200">Returns one question</response>
            <response code="204">No questions exists so return nothing.</response>
            <response code="404">Quiz doesn't exist.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.QuestionsController.Post(System.Int32,System.Collections.Generic.ICollection{QuizyfyAPI.Models.QuestionCreateModel})">
            <summary>
            Creates question for given quiz with provided data.
            </summary>
            <param name="quizId">Id of quiz you want to attach question to.</param>
            <param name="model">Question model.</param>
            <returns>>An ActionResult of Question</returns>
            <remarks>
            Sample request (this request returns **created question**)  
                 
                POST /quizzes/1/questions
                
                {
                    "name":"another name"
                }
                
            </remarks>  
            <response code="201">Returns created question with.</response>
            <response code="422">One of validation errors occured.</response>
            <response code="400">Bad request not complete or corrupted data.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.QuestionsController.Put(System.Int32,System.Int32,QuizyfyAPI.Models.QuestionCreateModel)">
            <summary>
            Updates question for given quiz with specified id and data.
            </summary>
            <param name="quizId">Id of quiz you want to update.</param>
            <param name="questionId">Id of question you want to update.</param>
            <param name="model">New data for question.</param>
            <returns>>An ActionResult of QuestionModel</returns>
            <remarks>
            Sample request (this request returns **updated question**)  
                 
                PUT /quizzes/1/questions/1
                
                {
                    "name":"another name"
                }
                
            </remarks>  
            <response code="200">Returns question with provided id and updated info.</response>
            <response code="404">Question with provided id wasn't found.</response> 
            <response code="204">Probably should never return that but there is possibility that question isn't null but mapping result in null.</response> 
            <response code="422">One of validation errors occured.</response>
            <response code="400">Bad request not complete or corrupted data.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.QuestionsController.Delete(System.Int32,System.Int32)">
            <summary>
            Deletes question for quiz with specified id.
            </summary>
            <param name="quizId">Id of quiz you want to delete question from.</param>
            <param name="questionId">Id of question you want to delete</param>
            <returns>Response Code</returns>
            <remarks>
            Sample request (this request returns **response code only**)  
                 
                DELETE /quizzes/1/questions/1
                
            </remarks> 
            <response code = "404" >Quiz or question with provided id wasn't found.</response> 
            <response code = "200" >Question was sucessfully deleted.</response> 
            <response code = "400" >Request data was not complete or corrupted.</response> 
        </member>
        <member name="M:QuizyfyAPI.Controllers.QuizzesController.Get(QuizyfyAPI.Models.PagingParams)">
            <summary>
            Get list of all quizes.
            </summary>
            <param name="includeQuestions">Parameter which tells us wheter to include questions for quiz or not.</param>
            <returns>An ActionResult of QuizModel array type</returns>
            <remarks>
            Sample request (this request returns **array of quizzes**)  
                 
                GET /quizzes
                
            </remarks>
            <response code="200">Returns array of all quizzes</response>
            <response code="204">No quizzes exists so return nothing.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.QuizzesController.Get(System.Int32,System.Boolean)">
            <summary>
            Get one quiz by id.
            </summary>
            <param name="id">This is id of the quiz you want to get.</param>
            <param name="includeQuestions">Parameter which tells us wheter to include questions for quiz or not.</param>
            <returns>>An ActionResult of QuizModel</returns>
            <remarks>
            Sample request (this request returns **one quiz**)  
                 
                GET /quizzes/1
                
            </remarks>   
            <response code="200">Returns one quiz with provided id</response>
            <response code="404">Quiz with provided id wasn't found.</response>
            <response code="204">Probably should never return that but there is possibility that quiz isn't null but mapping result in this.</response> 
        </member>
        <member name="M:QuizyfyAPI.Controllers.QuizzesController.Post(QuizyfyAPI.Models.QuizCreateModel)">
            <summary>
            Create quiz with provided info.
            </summary>
            <param name="model">This is json representation of quiz you want to create.</param>
            <returns>>An ActionResult of QuizModel</returns>
            <remarks>
            Sample request (this request returns **created quiz**)  
                 
                POST /quizzes
                
                {
                    "name":"quizname"
                }
                
            </remarks>  
            <response code="400">Data provided was not complete or corrupted.</response>
            <response code="201">Quiz was created and you can access it.</response>
            <response code="422">One of validation errors occured.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.QuizzesController.Put(System.Int32,QuizyfyAPI.Models.QuizCreateModel)">
            <summary>
            Updates quiz with specified id and data.
            </summary>
            <param name="id">Id of quiz you want to update.</param>
            <param name="model">New data for quiz.</param>
            <returns>>An ActionResult of QuizModel</returns>
            <remarks>
            Sample request (this request returns **updated quiz**)  
                 
                PUT /quizzes
                
                {
                    "name":"another name"
                }
                
            </remarks>  
            <response code="200">Returns quiz with provided id and updated info.</response>
            <response code="404">Quiz with provided id wasn't found.</response> 
            <response code="204">Probably should never return that but there is possibility that quiz isn't null but mapping result in this.</response> 
            <response code="422">One of validation errors occured.</response>
            <response code="400">Bad request not complete or corrupted data.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.QuizzesController.Delete(System.Int32)">
            <summary>
            Deletes quiz with specified id.
            </summary>
            <param name="id">Id of quiz you want to delete.</param>
            <returns>Response Code</returns>
            <remarks>
            Sample request (this request returns **response code only**)  
                 
                DELETE /quizzes/1
                
            </remarks> 
            <response code = "404" >Quiz with provided id wasn't found.</response> 
            <response code = "200" >Quiz was sucessfully deleted.</response> 
            <response code = "400" >Request data was not complete or corrupted.</response> 
        </member>
        <member name="M:QuizyfyAPI.Controllers.UsersController.Login(QuizyfyAPI.Models.UserLoginModel)">
            <summary>
            Authenticate user by checking if he is in database.
            </summary>
            <param name="model">User credentials</param>
            <returns>Action Result of user model</returns>
            <remarks>
            Sample request (this request returns **user with token if authentication went well**)  
                 
                POST /users/login
                
                {
                    "username": "test",
                    "password": "password"
                }    
                
            </remarks> 
            <response code="200">Returns user with JWT bearer token.</response>
            <response code="204">User with this name was not found so return nothing.</response>
            <response code="406">Request data type is not in acceptable format.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.UsersController.Register(QuizyfyAPI.Models.UserRegisterModel)">
            <summary>
            Create user with given credentials.
            </summary>
            <param name="model">User credentials</param>
            <returns>Action Result of user model</returns>
            <remarks>
            Sample request (this request returns **user with token**)  
                 
                POST /users/register
                
                {
                    "username": "test",
                    "password": "password",
                    "role": "user"
                }    
                
            </remarks> 
            <response code="400">User is already taken or you didn't provide enough data.</response>
            <response code="201">User sucessfully created. Now you can login on login action.</response>
            <response code="406">Request data type is not in acceptable format.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.UsersController.Put(System.Int32,QuizyfyAPI.Models.UserRegisterModel)">
            <summary>
            Updates user credentials.
            </summary>
            <param name="id">Id of user you want to update.</param>
            <param name="model">New credentials.</param>
            <returns>Action Result of user model</returns>
            <remarks>
            Sample request (this request returns **user**)  
                 
                PUT /users/1
                
                {
                    "username": "test",
                    "password": "password"
                }    
                
            </remarks> 
            <response code="404">User with given id was not found.</response>
            <response code="403">You aren't user with given id.</response>
            <response code="400">User with this name already exists or you didn't provide enough data.</response>
            <response code="200">Returns user with changed properties.</response>
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="401">You aren't authenticated. Please authenticate first.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.UsersController.Delete(System.Int32)">
            <summary>
            Deletes user with given id.
            </summary>
            <param name="id">Id of user you want to delete.</param>
            <returns>Response Code</returns>
            <remarks>
            Sample request (this request returns **response code only**)  
                 
                DELETE /users/1
                
            </remarks> 
            <response code="404">User with given id was not found.</response>
            <response code="403">You aren't user with given id.</response>
            <response code="400">You didn't provide enough data.</response>
            <response code="200">Returns ok if user deleted.</response>
            <response code="401">You aren't authenticated. Please authenticate first.</response>
        </member>
        <member name="T:QuizyfyAPI.Models.ChoiceModel">
            <summary>
            A choice with text(actual answer) and isRight bool. Used for displaying questions and DTO.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.ChoiceModel.Text">
            <summary>
            Choice text (answer).
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.ChoiceModel.IsRight">
            <summary>
            Bool which defines whether this answer is right or not.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Models.ErrorModel">
            <summary>
            Error with status code and message.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.ErrorModel.StatusCode">
            <summary>
            Int which tells us error status code.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.ErrorModel.Message">
            <summary>
            Error message.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Models.QuestionCreateModel">
            <summary>
            Question with text(actual question) only. Used for DTO.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.QuestionCreateModel.Text">
            <summary>
            Question text.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Models.QuestionModel">
            <summary>
            A question with text(actual question) and collection of choices. Used for displaying questions.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.QuestionModel.Text">
            <summary>
            Question text.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.QuestionModel.Choices">
            <summary>
            Possible question answers.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Models.QuizCreateModel">
            <summary>
            A quiz with name and questions properties. Used for DTO.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.QuizCreateModel.Name">
            <summary>
            Quiz name.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.QuizCreateModel.Description">
            <summary>
            Quiz description.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.QuizCreateModel.Questions">
            <summary>
            Collection of questions which belongs to quiz.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Models.QuizModel">
            <summary>
            A quiz with name , date of addition and questions properties. Used for displaying quizzes.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.QuizModel.Id">
            <summary>
            Quiz id.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.QuizModel.Name">
            <summary>
            Quiz name.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.QuizModel.Description">
            <summary>
            Quiz description.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.QuizModel.DateAdded">
            <summary>
            Date of addition to database.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.QuizModel.Questions">
            <summary>
            Collection of questions which belongs to quiz.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Models.UserLoginModel">
            <summary>
            A user credentials. Used for authentication
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.UserLoginModel.Username">
            <summary>
            User name.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.UserLoginModel.Password">
            <summary>
            User password.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Models.UserModel">
            <summary>
            A user with username, password, role, token and full name.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.UserModel.FirstName">
            <summary>
            First name of the user owner.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.UserModel.LastName">
            <summary>
            Last name of the user owner.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.UserModel.Username">
            <summary>
            User name.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.UserModel.Password">
            <summary>
            User password.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.UserModel.Role">
            <summary>
            User role. (Can be either admin or user)
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.UserModel.JwtToken">
            <summary>
            JWT Token used for authentication
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Models.UserRegisterModel">
            <summary>
            A user with username, password, role and full name. Used for creating user.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.UserRegisterModel.FirstName">
            <summary>
            First name of the user owner.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.UserRegisterModel.LastName">
            <summary>
            Last name of the user owner.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.UserRegisterModel.Username">
            <summary>
            User name.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.UserRegisterModel.Password">
            <summary>
            User password.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Models.UserRegisterModel.Role">
            <summary>
            User role. (Can be either admin or user)
            </summary>
        </member>
    </members>
</doc>
