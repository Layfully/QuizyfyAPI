<?xml version="1.0"?>
<doc>
    <assembly>
        <name>QuizyfyAPI</name>
    </assembly>
    <members>
        <member name="T:QuizyfyAPI.Contracts.Requests.ChoiceCreateRequest">
            <summary>
            A choice with text(actual answer) and isRight bool. Used for displaying questions and DTO.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.ChoiceCreateRequest.Text">
            <summary>
            Choice text (answer).
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.ChoiceCreateRequest.IsRight">
            <summary>
            Bool which defines whether this answer is right or not.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Contracts.Requests.ChoiceUpdateRequest">
            <summary>
            A choice with text(actual answer) and isRight bool. Used for displaying questions and DTO.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.ChoiceUpdateRequest.Text">
            <summary>
            Choice text (answer).
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.ChoiceUpdateRequest.IsRight">
            <summary>
            Bool which defines whether this answer is right or not.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Contracts.Requests.QuestionCreateRequest">
            <summary>
            Question with text(actual question) only. Used for DTO.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.QuestionCreateRequest.Text">
            <summary>
            Question text.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Contracts.Requests.QuestionUpdateRequest">
            <summary>
            Question with text(actual question) only. Used for DTO.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.QuestionUpdateRequest.Text">
            <summary>
            Question text.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Contracts.Requests.QuizCreateRequest">
            <summary>
            A quiz with name and questions properties. Used for DTO.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.QuizCreateRequest.Name">
            <summary>
            Quiz name.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.QuizCreateRequest.Description">
            <summary>
            Quiz description.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.QuizCreateRequest.ImageUrl">
            <summary>
            Quiz image url which we get when we upload image.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.QuizCreateRequest.Questions">
            <summary>
            Collection of questions which belongs to quiz.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Contracts.Requests.QuizUpdateRequest">
            <summary>
            A quiz with name and questions properties. Used for DTO.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.QuizUpdateRequest.Name">
            <summary>
            Quiz name.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.QuizUpdateRequest.Description">
            <summary>
            Quiz description.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.QuizUpdateRequest.ImageId">
            <summary>
            Quiz image url which we get when we upload image.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Contracts.Requests.RecoverPasswordRequest">
            <summary>
            Request used to provide data for email verification.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.RecoverPasswordRequest.Token">
            <summary>
            Password Recovery token generated by guid.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Contracts.Requests.RecoveryTokenGenerationRequest">
            <summary>
            Request used to provide data for recovery password token generation.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Contracts.Requests.UserLoginRequest">
            <summary>
            A user credentials. Used for authentication
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.UserLoginRequest.Username">
            <summary>
            User name.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.UserLoginRequest.Password">
            <summary>
            User password.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.UserLoginRequest.RecaptchaToken">
            <summary>
            Token for checking if request is made by bot or real person.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Contracts.Requests.UserRefreshRequest">
            <summary>
            Request used for refreshing user JWT token.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.UserRefreshRequest.RefreshToken">
            <summary>
            Refresh token which lasts for long time.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.UserRefreshRequest.JwtToken">
            <summary>
            Already expired previous JWT token which needs to be refreshed.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Contracts.Requests.UserRegisterRequest">
            <summary>
            A user with username, password, role and full name. Used for creating user.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.UserRegisterRequest.FirstName">
            <summary>
            First name of the user owner.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.UserRegisterRequest.LastName">
            <summary>
            Last name of the user owner.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.UserRegisterRequest.Username">
            <summary>
            User name.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.UserRegisterRequest.Password">
            <summary>
            User password.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.UserRegisterRequest.Role">
            <summary>
            User role. (Can be either admin or user)
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.UserRegisterRequest.RecaptchaToken">
            <summary>
            Token used for checking if request was made by bot or real person.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.UserRegisterRequest.Email">
            <summary>
            Email address on which we will send confirmation message.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Contracts.Requests.UserUpdateRequest">
            <summary>
            A user with username, password, role and full name. Used for creating user.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.UserUpdateRequest.FirstName">
            <summary>
            First name of the user owner.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.UserUpdateRequest.LastName">
            <summary>
            Last name of the user owner.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.UserUpdateRequest.Username">
            <summary>
            User name.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.UserUpdateRequest.Password">
            <summary>
            User password.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.UserUpdateRequest.Role">
            <summary>
            User role. (Can be either admin or user)
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Requests.UserUpdateRequest.Email">
            <summary>
            User email. (Must be unique)
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Contracts.Responses.VerifyEmailRequest">
            <summary>
            Request used to provide data for email verification.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.VerifyEmailRequest.Token">
            <summary>
            Email verification token generated by guid.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Contracts.Responses.ChoiceResponse">
            <summary>
            A choice with text(actual answer) and isRight bool. Used for displaying questions and DTO.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.ChoiceResponse.Text">
            <summary>
            Choice text (answer).
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.ChoiceResponse.IsRight">
            <summary>
            Bool which defines whether this answer is right or not.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Contracts.Responses.ErrorResponse">
            <summary>
            Error with status code and message.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.ErrorResponse.StatusCode">
            <summary>
            Int which tells us error status code.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.ErrorResponse.Message">
            <summary>
            Error message.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Contracts.Responses.ImageResponse">
            <summary>
            Image with id from database and url to access it.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.ImageResponse.Id">
            <summary>
            Image id.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.ImageResponse.ImageUrl">
            <summary>
            URL to image resource on server.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Contracts.Responses.LikeResponse">
            <summary>
            A like of quiz which belongs to some user.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.LikeResponse.QuizId">
            <summary>
            This id specifies to which quiz like belongs to.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.LikeResponse.UserId">
            <summary>
            This id specifies to which user liked quiz.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Contracts.Responses.QuestionResponse">
            <summary>
            A question with text(actual question) and collection of choices. Used for displaying questions.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.QuestionResponse.Text">
            <summary>
            Question text.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.QuestionResponse.ImageUrl">
            <summary>
            Url to optional image for question.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.QuestionResponse.Choices">
            <summary>
            Possible question answers.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Contracts.Responses.QuizResponse">
            <summary>
            A quiz with name , date of addition and questions properties. Used for displaying quizzes.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.QuizResponse.Id">
            <summary>
            Quiz id.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.QuizResponse.Name">
            <summary>
            Quiz name.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.QuizResponse.Description">
            <summary>
            Quiz description.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.QuizResponse.DateAdded">
            <summary>
            Date of addition to database.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.QuizResponse.Questions">
            <summary>
            Collection of questions which belongs to quiz.
            </summary>
        </member>
        <member name="T:QuizyfyAPI.Contracts.Responses.UserResponse">
            <summary>
            A user with username, password, role, token and full name.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.UserResponse.FirstName">
            <summary>
            First name of the user owner.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.UserResponse.LastName">
            <summary>
            Last name of the user owner.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.UserResponse.Username">
            <summary>
            User name.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.UserResponse.Password">
            <summary>
            User password.
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.UserResponse.Role">
            <summary>
            User role. (Can be either admin or user)
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.UserResponse.JwtToken">
            <summary>
            JWT Token used for authentication
            </summary>
        </member>
        <member name="P:QuizyfyAPI.Contracts.Responses.UserResponse.RefreshToken">
            <summary>
            Token used for refreshing JWT token.
            </summary>
        </member>
        <member name="M:QuizyfyAPI.Controllers.ChoicesController.Get(System.Int32,System.Int32)">
            <summary>
            Get list of all choices for given quiz id and question id.
            </summary>
            <param name="quizId">Parameter which tells us to which quiz question belongs to.</param>
            <param name="questionId">Id of question we want to get choices from.</param>
            <returns>An ActionResult of ChoiceModel array type</returns>
            <remarks>
            Sample request (this request returns an **array of choices**)  
                 
                GET /quizzes/1/questions/1/choices
                
            </remarks>
            <response code="200">Returns array of all choices</response>
            <response code="204">No questions exists so return nothing.</response>
            <response code="404">Quiz or question doesn't exist.</response>
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.ChoicesController.Get(System.Int32,System.Int32,System.Int32)">
            <summary>
            Get one choice for given quiz and question id.
            </summary>
            <param name="quizId">Parameter which tells us to which quiz question belongs to.</param>
            <param name="questionId">Id of question we want to get choice from.</param>
            <param name="choiceId">Id of choice we want to return.</param>
            <returns>An ActionResult of ChoiceModel type</returns>
            <remarks>
            Sample request (this request returns **one choice**)  
                 
                GET /quizzes/1/questions/1/choices/1
                
            </remarks>
            <response code="200">Returns one choice</response>
            <response code="204">No questions exists so return nothing.</response>
            <response code="404">Choice doesn't exist.</response>
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.ChoicesController.Post(System.Int32,System.Int32,QuizyfyAPI.Contracts.Requests.ChoiceCreateRequest)">
            <summary>
            Creates choice for given quiz and question with provided data.
            </summary>
            <param name="quizId">Id of quiz you want to get question from.</param>
            <param name="questionId">Id of question we want to attach choice to.</param>
            <param name="request">Choice model.</param>
            <returns>>An ActionResult of Choice</returns>
            <remarks>
            Sample request (this request returns **created choice**)  
                 
                POST /quizzes/1/questions/1/choices/
                
                {
                    "name":"another name"
                }
                
            </remarks>  
            <response code="201">Returns created choice.</response>
            <response code="400">Bad request not complete or corrupted data.</response>
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.ChoicesController.Put(System.Int32,System.Int32,System.Int32,QuizyfyAPI.Contracts.Requests.ChoiceUpdateRequest)">
            <summary>
            Updates choice for given quiz and question with specified id and data.
            </summary>
            <param name="quizId">Id of quiz you want to update.</param>
            <param name="questionId">Id of question you want to update.</param>
            <param name="choiceId">Id of choice you want to update.</param>
            <param name="request">New data for question.</param>
            <returns>>An ActionResult of QuestionModel</returns>
            <remarks>
            Sample request (this request returns **updated choice**)  
                 
                PUT /quizzes/1/questions/1/choices/1
                
                {
                    "name":"another name"
                }
                
            </remarks>  
            <response code="200">Returns choice with provided id and updated info.</response>
            <response code="204">Probably should never return that but there is possibility that question isn't null but mapping result in null.</response> 
            <response code="400">Bad request not complete or corrupted data.</response>
            <response code="404">Choice with provided id wasn't found.</response> 
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.ChoicesController.Delete(System.Int32,System.Int32,System.Int32)">
            <summary>
            Deletes question for quiz and question with specified id.
            </summary>
            <param name="quizId">Id of quiz you want to delete question from.</param>
            <param name="questionId">Id of question you want to delete choice from.</param>
            <param name="choiceId">Id of choice you want to delete.</param>
            <returns>Response Code</returns>
            <remarks>
            Sample request (this request returns **response code only**)  
                 
                DELETE /quizzes/1/questions/1/choices/1
                
            </remarks> 
            <response code="200" >Choice was sucessfully deleted.</response> 
            <response code="400" >Request data was not complete or corrupted.</response> 
            <response code="404" >Quiz or question or choice with provided id wasn't found.</response> 
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.ImagesController.Get">
            <summary>
            Get list of all images.
            </summary>
            <returns>An ActionResult of ImageModel array type</returns>
            <remarks>
            Sample request (this request returns **array of images**)  
                 
                GET /images
                
            </remarks>
            <response code="200">Returns array of all images</response>
            <response code="204">No images exists so return nothing.</response>
            <response code="404">Images don't exist.</response>
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.ImagesController.Get(System.Int32)">
            <summary>
            Get one image with given id.
            </summary>
            <param name="id">Parameter which tells us image to return.</param>
            <returns>An ActionResult of ImageModel type</returns>
            <remarks>
            Sample request (this request returns **one image**)  
                 
                GET /images/1
                
            </remarks>
            <response code="200">Returns one image</response>
            <response code="204">No images exists so return nothing.</response>
            <response code="404">Image doesn't exist.</response>
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.ImagesController.Post(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Create image with provided info.
            </summary>
            <param name="file">This is representation of file you want to upload</param>
            <returns>>An ActionResult of ImageModel</returns>
            <remarks>
            Sample request (this request returns **created image**)  
                 
                POST /images
                
            </remarks>  
            <response code="201">Image was created and you can access it.</response>
            <response code="400">Data provided was not complete or corrupted.</response>
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.ImagesController.Put(System.Int32,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Updates image with given id with specified  data.
            </summary>
            <param name="id">Id of image you want to update.</param>
            <param name="file">New image.</param>
            <returns>>An ActionResult of ImageModel</returns>
            <remarks>
            Sample request (this request returns **updated image**)  
                 
                PUT /images/1
                
            </remarks>  
            <response code="200">Returns image with provided id and updated info.</response>
            <response code="204">Probably should never return that but there is possibility that images isn't null but mapping result in null.</response> 
            <response code="400">Bad request not complete or corrupted data.</response>
            <response code="404">Image with provided id wasn't found.</response> 
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.ImagesController.Delete(System.Int32)">
            <summary>
            Deletes image with specified id.
            </summary>
            <param name="id">Specifies which image to delete</param>
            <returns>Response Code</returns>
            <remarks>
            Sample request (this request returns **response code only**)  
                 
                DELETE /images/1
                
            </remarks> 
            <response code="200">Image was sucessfully deleted.</response> 
            <response code="400">Request data was not complete or corrupted.</response> 
            <response code="404">Image with provided id wasn't found.</response> 
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.LikesController.Put(System.Int32)">
            <summary>
            Likes quiz.
            </summary>
            <param name="quizId">Id of quiz you want to like.</param>
            <returns>Action Result with like model</returns>
            <remarks>
            Sample request (this request returns **like**)  
                 
                PUT /quizzes/1/likes
                
            </remarks> 
            <response code="200">Returns like which existed or newly created.</response>
            <response code="400">There was no records updated.</response>
            <response code="401">You aren't authenticated. Please authenticate first.</response>
            <response code="404">Quiz with given id was not found.</response>
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.LikesController.Delete(System.Int32)">
            <summary>
            Unlikes quiz.
            </summary>
            <param name="quizId">Id of quiz you want to unlike.</param>
            <returns>Response Code</returns>
            <remarks>
            Sample request (this request returns **response code only**)  
                 
                DELETE /quizzes/1/likes
                
            </remarks> 
            <response code="200">Returns ok if like was deleted.</response>
            <response code="400">There was no affected records in db.</response>
            <response code="401">You aren't authenticated. Please authenticate first.</response>
            <response code="404">Quiz with given id was not found.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.QuestionsController.Get(System.Int32,System.Boolean)">
            <summary>
            Get list of all questions for given quiz id.
            </summary>
            <param name="quizId">Parameter which tells us to which quiz question belongs to.</param>
            <param name="includeChoices">Parameter which tells us wheter to include choices for question or not.</param>
            <returns>An ActionResult of QuestionModel array type</returns>
            <remarks>
            Sample request (this request returns **array of questions**)  
                 
                GET /quizzes/1/questions/
                
            </remarks>
            <response code="200">Returns array of all questions</response>
            <response code="204">No questions exists so return nothing.</response>
            <response code="404">Quiz doesn't exist.</response>
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.QuestionsController.Get(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get one question for given quiz id.
            </summary>
            <param name="quizId">Parameter which tells us to which quiz question belongs to.</param>
            <param name="questionId">Id of question we want to return.</param>
            <param name="includeChoices">Parameter which tells us wheter to include choices for question or not.</param>
            <returns>An ActionResult of QuestionModel array type</returns>
            <remarks>
            Sample request (this request returns **one question**)  
                 
                GET /quizzes/1/questions/1
                
            </remarks>
            <response code="200">Returns one question</response>
            <response code="404">Quiz doesn't exist.</response>
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.QuestionsController.Post(System.Int32,QuizyfyAPI.Contracts.Requests.QuestionCreateRequest)">
            <summary>
            Creates question for given quiz with provided data.
            </summary>
            <param name="quizId">Id of quiz you want to attach question to.</param>
            <param name="request">Question model.</param>
            <returns>An ActionResult of Question</returns>
            <remarks>
            Sample request (this request returns **created question**)  
                 
                POST /quizzes/1/questions
                
                {
                    "name":"another name"
                }
                
            </remarks>  
            <response code="201">Returns created question with.</response>
            <response code="400">Bad request not complete or corrupted data.</response>
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.QuestionsController.Put(System.Int32,System.Int32,QuizyfyAPI.Contracts.Requests.QuestionUpdateRequest)">
            <summary>
            Updates question for given quiz with specified id and data.
            </summary>
            <param name="quizId">Id of quiz you want to update.</param>
            <param name="questionId">Id of question you want to update.</param>
            <param name="request">New data for question.</param>
            <returns>>An ActionResult of QuestionModel</returns>
            <remarks>
            Sample request (this request returns **updated question**)  
                 
                PUT /quizzes/1/questions/1
                
                {
                    "name":"another name"
                }
                
            </remarks>  
            <response code="200">Returns question with provided id and updated info.</response>
            <response code="204">Probably should never return that but there is possibility that question isn't null but mapping result in null.</response> 
            <response code="404">Question with provided id wasn't found.</response> 
            <response code="400">Bad request not complete or corrupted data.</response>
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.QuestionsController.Delete(System.Int32,System.Int32)">
            <summary>
            Deletes question for quiz with specified id.
            </summary>
            <param name="quizId">Id of quiz you want to delete question from.</param>
            <param name="questionId">Id of question you want to delete</param>
            <returns>Response Code</returns>
            <remarks>
            Sample request (this request returns **response code only**)  
                 
                DELETE /quizzes/1/questions/1
                
            </remarks> 
            <response code="200" >Question was sucessfully deleted.</response> 
            <response code="400" >Request data was not complete or corrupted.</response>
            <response code="404" >Quiz or question with provided id wasn't found.</response> 
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.QuizzesController.Get(QuizyfyAPI.Contracts.Responses.Pagination.PagingParams)">
            <summary>
            Get list of all quizes.
            </summary>
            <param name="pagingParams">Parameter which tells us about which quizzes to display.</param>
            <returns>An ActionResult of QuizModel array type</returns>
            <remarks>
            Sample request (this request returns **array of quizzes**)  
                 
                GET /quizzes
                
            </remarks>
            <response code="200">Returns array of all quizzes</response>
            <response code="204">No quizzes exists so return nothing.</response>
            <response code="404">Couldn't find any quizzes.</response>
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.QuizzesController.Get(System.Int32,System.Boolean)">
            <summary>
            Get one quiz by id.
            </summary>
            <param name="id">This is id of the quiz you want to get.</param>
            <param name="includeQuestions">Parameter which tells us wheter to include questions for quiz or not.</param>
            <returns>>An ActionResult of QuizModel</returns>
            <remarks>
            Sample request (this request returns **one quiz**)  
                 
                GET /quizzes/1
                
            </remarks>   
            <response code="200">Returns one quiz with provided id</response>
            <response code="204">Probably should never return that but there is possibility that quiz isn't null but mapping result in this.</response> 
            <response code="404">Quiz with provided id wasn't found.</response>
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.QuizzesController.Post(QuizyfyAPI.Contracts.Requests.QuizCreateRequest)">
            <summary>
            Create quiz with provided info.
            </summary>
            <param name="request">This is json representation of quiz you want to create.</param>
            <returns>>An ActionResult of QuizModel</returns>
            <remarks>
            Sample request (this request returns **created quiz**)  
                 
                POST /quizzes
                
                {
                    "name":"quizname"
                }
                
            </remarks>  
            <response code="201">Quiz was created and you can access it.</response>
            <response code="400">Data provided was not complete or corrupted.</response>
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.QuizzesController.Put(System.Int32,QuizyfyAPI.Contracts.Requests.QuizUpdateRequest)">
            <summary>
            Updates quiz with specified id and data.
            </summary>
            <param name="id">Id of quiz you want to update.</param>
            <param name="request">New data for quiz.</param>
            <returns>>An ActionResult of QuizModel</returns>
            <remarks>
            Sample request (this request returns **updated quiz**)  
                 
                PUT /quizzes
                
                {
                    "name":"another name"
                }
                
            </remarks>  
            <response code="200">Returns quiz with provided id and updated info.</response>
            <response code="204">Probably should never return that but there is possibility that quiz isn't null but mapping result in this.</response> 
            <response code="400">Bad request not complete or corrupted data.</response>
            <response code="404">Quiz with provided id wasn't found.</response> 
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.QuizzesController.Delete(System.Int32)">
            <summary>
            Deletes quiz with specified id.
            </summary>
            <param name="id">Id of quiz you want to delete.</param>
            <returns>Response Code</returns>
            <remarks>
            Sample request (this request returns **response code only**)  
                 
                DELETE /quizzes/1
                
            </remarks> 
            <response code="200" >Quiz was sucessfully deleted.</response> 
            <response code="400" >Request data was not complete or corrupted.</response> 
            <response code="404" >Quiz with provided id wasn't found.</response> 
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.UsersController.Login(QuizyfyAPI.Contracts.Requests.UserLoginRequest)">
            <summary>
            Authenticate user by checking if he is in database.
            </summary>
            <param name="request">User credentials</param>
            <returns>Action Result with user model</returns>
            <remarks>
            Sample request (this request returns **user with token if authentication went well**)  
                 
                POST /users/login
                
                {
                    "username": "test",
                    "password": "password"
                }    
                
            </remarks> 
            <response code="200">Returns user with JWT bearer token.</response>
            <response code="204">User with this name was not found so return nothing.</response>
            <response code="401">Provided login and password didn't match with any user.</response>
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.UsersController.Register(QuizyfyAPI.Contracts.Requests.UserRegisterRequest)">
            <summary>
            Create user with given credentials.
            </summary>
            <param name="request">User credentials</param>
            <returns>Action Result of user model</returns>
            <remarks>
            Sample request (this request returns **user with token**)  
                 
                POST /users/register
                
                {
                    "username": "test",
                    "password": "password",
                    "role": "user"
                }    
                
            </remarks> 
            <response code="201">User sucessfully created. Now you can login on login action.</response>
            <response code="400">User is already taken or there was no records in db saved.</response>
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.UsersController.Put(System.Int32,QuizyfyAPI.Contracts.Requests.UserUpdateRequest)">
            <summary>
            Updates user credentials.
            </summary>
            <param name="id">Id of user you want to update.</param>
            <param name="request">New credentials.</param>
            <returns>Action Result with user model</returns>
            <remarks>
            Sample request (this request returns **user**)  
                 
                PUT /users/1
                
                {
                    "username": "test",
                    "password": "password"
                }    
                
            </remarks> 
            <response code="200">Returns user with changed properties.</response>
            <response code="400">User with this name already exists or there was no records updated.</response>
            <response code="401">You aren't authenticated. Please authenticate first.</response>
            <response code="403">You aren't user with given id.</response>
            <response code="404">User with given id was not found.</response>
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.UsersController.Delete(System.Int32)">
            <summary>
            Deletes user with given id.
            </summary>
            <param name="id">Id of user you want to delete.</param>
            <returns>Response Code</returns>
            <remarks>
            Sample request (this request returns **response code only**)  
                 
                DELETE /users/1
                
            </remarks> 
            <response code="200">Returns ok if user was deleted.</response>
            <response code="400">There was no affected records in db.</response>
            <response code="401">You aren't authenticated. Please authenticate first.</response>
            <response code="403">You aren't user with given id.</response>
            <response code="404">User with given id was not found.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
        <member name="M:QuizyfyAPI.Controllers.UsersController.Refresh(QuizyfyAPI.Contracts.Requests.UserRefreshRequest)">
            <summary>
            Refresh JWT token of a user.
            </summary>
            <param name="request">Object with refresh token and JWT token</param>
            <returns>Action Result with user with refreshed JWT token</returns>
            <remarks>
            Sample request (this request returns **user with JWT token and refresh token**)  
                 
                POST /users/1/refresh
                
                {
                    "JwtToken": "token",
                    "RefreshToken": "token"
                }    
                
            </remarks> 
            <response code="200">JWT sucessfully refreshed.</response>
            <response code="400">There were problems with tokens validation.</response>
            <response code="406">Request data type is not in acceptable format.</response>
            <response code="422">Request data couldn't be processed.</response>
            <response code="500">Something threw exception on server.</response>
        </member>
    </members>
</doc>
